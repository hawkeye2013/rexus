name: Build

on:
  push:
    branches:
      - "main"

jobs:
  style-check:
    runs-on: ubuntu-latest
    name: Style Check
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - uses: actions/cache@v2
        id: cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Update NPM
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install -g npm
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Style Checker
        run: npm run style:check

  lint-check:
    runs-on: ubuntu-latest
    name: Lint Check
    needs: style-check
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - uses: actions/cache@v2
        id: cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Update NPM
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install -g npm
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Linter Checker
        run: npm run lint

  test-frontend:
    runs-on: ubuntu-latest
    name: Test Frontend
    needs: lint-check
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - uses: actions/cache@v2
        id: cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Update NPM
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install -g npm
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Front End Tests
        run: npm run test:frontend:ci

  test-backend:
    runs-on: ubuntu-latest
    name: Test Backend
    needs: lint-check
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - uses: actions/cache@v2
        id: cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Update NPM
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install -g npm
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Backend Tests
        run: npm run test:backend:ci

  build-deploy:
    runs-on: ubuntu-latest
    name: Build (And Deploy)
    needs: [test-frontend, test-backend]
    steps:
      - name: Check Tag
        id: check-tag
        run: |
          if [[ "${{ github.event.commits[0].message }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo ::set-output name=match::true
          fi
      - name: Set up QEMU
        if: steps.check-tag.outputs.match == 'true'
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        if: steps.check-tag.outputs.match == 'true'
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: steps.check-tag.outputs.match == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push to docker hub
        if: steps.check-tag.outputs.match == 'true'
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: hawkeye2013/rexus:latest, hawkeye2013/rexus:${{ github.event.commits[0].message }}
