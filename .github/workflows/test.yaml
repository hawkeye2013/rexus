name: Test & Lint

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  style-check:
    runs-on: ubuntu-latest
    name: Style Check
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - uses: actions/cache@v2
        id: cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Update NPM
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install -g npm
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Style Checker
        run: npm run style:check

  lint-check:
    runs-on: ubuntu-latest
    name: Lint Check
    needs: style-check
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - uses: actions/cache@v2
        id: cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Update NPM
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install -g npm
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Linter Checker
        run: npm run lint

  test-frontend:
    runs-on: ubuntu-latest
    name: Test Frontend
    needs: lint-check
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - uses: actions/cache@v2
        id: cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Update NPM
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install -g npm
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Front End Tests
        run: npm run test:frontend:ci

  test-backend:
    runs-on: ubuntu-latest
    name: Test Backend
    needs: lint-check
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - uses: actions/cache@v2
        id: cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Update NPM
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install -g npm
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Backend Tests
        run: npm run test:backend:ci
